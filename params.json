{"name":"Rabbitoperations","tagline":"Operations support for RabbitMQ applications","body":"# Rabbit Operations\r\n\r\nOperations support for RabbitMQ applications including integration with popular\r\nmessage bus libraries.  Right now it only supports NServiceBus.  We are also planning to support Rebus and MassTransit.\r\n\r\nThe application reads messages from audit and error queues into\r\nRavenDB, a document database with excellent indexing capabilities built\r\non Lucene.Net. Message content is automatically indexed for searching. The built-in web front end supports\r\nsearching and monitors message rates. It also links to the RabbiMQ management console. Future plans include support for trend analysis, tailing, monitoring, heart beating and integration with New Relic and PagerDuty. \r\n\r\nCheck out our [Trello board](https://trello.com/b/m0ZLn5d7/rabbitoperations) to see what is in development and what is being planned.\r\n\r\n![Screen](/docs/images/screenshot.png?raw=true \"Screenshot\")\r\n\r\n## Prerequisites\r\n\r\nYour application should send successfully processed messages to the audit queue and any message that fails processing to the error queue. Popular .NET message bus libraries, like NServiceBus, MassTransit and Rebus either do this by default or can be configured to do so.\r\n\r\n## Getting Started For Developers\r\n\r\n_You must have Visual Studio 2015 or Microsoft Build Tools 2015 installed to build the application. Although it currently requires only the .NET 4.5 framework, it uses some C# 6.0 features that require the latest C# compiler_\r\n\r\nInstall psake on your machine.  You can get it from the [psake repository](https://github.com/psake/psake) or install it via [Choclatey](https://chocolatey.org/packages/psake):\r\n\r\n````\r\nchoco install psake\r\n````\r\n\r\nOpen a Powershell window and issue the command to build and run tests.  If you installed psake from the repository:\r\n\r\n````\r\ninvoke-psake\r\n````\r\n\r\nOr, if you installed it via Choclatey:\r\n\r\n````\r\npsake\r\n````\r\n\r\nIf you want to build from Visual Studio, you will need to add the following to your nuget.config file:\r\n\r\n````\r\n<packageSources>\r\n   <add key=\"nuget.org\" value=\"https://www.myget.org/F/southside/\" />\r\n</packageSources>\r\n````\r\n\r\nCheck out the [nuget docs](https://docs.nuget.org/consume/nuget-config-file) for more information on editing the nuget.config file.\r\n\r\nYou can start the application either by running RabbitOperations.Collector from Visual Studio or from a Powershell command prompt via psake.  If you installed psake via the repository, use:\r\n\r\n````\r\ninvoke-psake startCollector\r\n````\r\nOr, if you installed it from Choclatey:\r\n\r\n````\r\npsake startCollector\r\n````\r\n\r\n## Documentation and Release Notes\r\n\r\nDocumentation is available in the [wiki](https://github.com/SouthsideSoftware/RabbitOperations/wiki)\r\n\r\n## License\r\n\r\n[GPL v3](http://www.gnu.org/licenses/gpl-3.0.txt)\r\n\r\n## Use of RavenDB\r\n\r\nRavenDB is embedded by default. Ayende has graciously agreed to provide a license for this purpose. You can also\r\nuse an external RavenDB if you like. If you use RavenDB externally, you will have to obtain an appropriate license\r\nfrom their [website](http://www.ravendb.org).\r\n\r\n## Contributing\r\n\r\nPull requests are welcome. If you want to get involved in the project,\r\nthere is room for one or two more core contributors. There are many interesting challenges remaining.\r\nPlease contact tom@cabanski.com for more information.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}