@using RabbitOperations.Collector.Web

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="../../favicon.ico">

    @RenderSection("head", false)
    @if (!string.IsNullOrEmpty(ViewBag.Title))
    {
        <title>@ViewBag.Title</title>
    }
    
    <title>Rabbit Operations Dashboard</title>

    <!-- Bootstrap core CSS -->
    <link href="content/Bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="content/css/dashboard.css" rel="stylesheet">
    <link href="content/css/stickyFooter.css" rel="stylesheet">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>

<body ng-app="rabbitOperationsApplication">

    <nav class="navbar navbar-inverse navbar-fixed-top">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="#">Rabbit Operations</a>
            </div>
            <div id="navbar" class="navbar-collapse collapse">
                <ul class="nav navbar-nav navbar-right">
                    <li><a href="#">Dashboard</a></li>
                    <li><a href="#">Profile</a></li>
                    <li><a href="#">Help</a></li>
                </ul>
                <form class="navbar-form navbar-right">
                    <input type="text" class="form-control" placeholder="Search for messages...">
                </form>
            </div>
        </div>
    </nav>

    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-3 col-md-2 sidebar">
                <ul class="nav nav-sidebar">
                    <li class="active"><a href="#">Overview <span class="sr-only">(current)</span></a></li>
                    <li><a href="#">Messages</a></li>
                </ul>
                <ul class="nav nav-sidebar">
                    <li><a href="">Admin</a></li>
                    <li><a href="">Configuration</a></li>
                </ul>
            </div>
            <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
                <h1 class="page-header">Dashboard</h1>

                <div class="row placeholders" ng-controller="dashboardController">
                    <div class="col-xs-4 col-sm-2 placeholder" ng-repeat="queue in queues">
                        <div ng-class="{greenHolder: !queue.queueSettings.isErrorQueue, redHolder: queue.queueSettings.isErrorQueue}" alt="Generic placeholder thumbnail" holder-fix><span>{{queue.messageRate > 0 ? queue.messageRate : 0}}/sec</span></div>
                        <h4>{{queue.queueSettings.environmentName}}</h4>
                        <span class="text-muted">{{queue.queueSettings.queueName}}</span>
                    </div>
                </div>

                @RenderBody()

            </div>
        </div>
    </div>

    <footer class="footer">
        <div class="container-fluid">
            <div class="col-sm-offset-3 col-sm-3 col-md-offset-2 col-md-2"><p class="text-muted">Version: @VersionHelper.Version()</p></div>
            <div class="col-sm-offset-3 col-sm-3 col-md-offset-6 col-md-2"><a href="http://www.ravendb.org"><img src="content/images/poweredbyravendb.png" /></a></div>
        </div>
    </footer>

<!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
    <script src="content/Bootstrap/js/bootstrap.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.12/angular.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.7.0/underscore-min.js"></script>
    <script type="text/javascript">
        
        var rabbitOperationsApplication = angular.module('rabbitOperationsApplication', []);

        rabbitOperationsApplication.controller('dashboardController', function ($scope, $http) {
            $http.get("/api/v1/QueuePollers").success(function (data, status, headers, config) {
                $scope.queues = data.activePollers;
            }).error(function (data, status, headers, config) {
                alert("AJAX failed!");
            });

            // Declare a proxy to reference the hub.
            var serverUpdates = $.connection.messagePulseHub;
            // Create a function that the hub can call to broadcast messages.
            serverUpdates.client.pulse = function (messageType, message) {
                var stats = angular.fromJson(message);
                _.each(stats, function (element, index, list) {
                    var prefix = 'RabbitOperations.QueuePoller.Messages';
                    var index = element.Name.indexOf(prefix);
                    if (index === 0) {
                        var parts = element.Name.substring(index + prefix.length + 1).split('.');
                        if (parts.length === 2) {
                            var queue = _.find($scope.queues,
                                function (queue) {
                                    if (queue.queueSettings.environmentId === parts[0] &&
                                      queue.queueSettings.queueName === parts[1]) {
                                        queue.messageRate = element.Value.OneMinuteRate.toFixed(2);
                                        $scope.$apply();
                                    }
                                }
                            );
                        }
                        console.log();
                    }
                });
                //$scope.getQueuesFromMessage(message);
            };
            // Start the connection.
            $.connection.hub.start().done(function () {
            });
        });
</script>

    @RenderSection("Script", false)
</body>
</html>
